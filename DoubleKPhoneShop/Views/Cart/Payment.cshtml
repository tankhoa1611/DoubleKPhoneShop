@model IEnumerable<DoubleKPhoneShop.Models.CartItem>

@{
    ViewBag.Title = "Check";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var code = ViewBag.code;
    var codeID = ViewBag.codeid;
    var giam = ViewBag.amount * 100;
    var point = ViewBag.point;
}

<div style="width:200px;margin-right:auto;margin-left:auto">
    <br />
    <marquee style="font-size:40px;" Scrollamount="10" behavior="alternate">Checkout</marquee>
</div>
<hr />

<div class="row">
    <div class="col-sm-12">
        <div class="table-responsive">
            <table class="table table-bordered">
                <tr>
                    <th>Hình</th>
                    <th>Tên sản phẩm</th>
                    <th>Số lượng</th>
                    <th>Đơn giá</th>
                    <th>Thành tiền</th>
                </tr>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="text-center"><img src="~/Images/@item.Product.Image" width="70" height="60" /> </td>
                        <td><a target="_blank" href="@Url.Action("ChiTiet", "SanPham", new { id = item.Product.ProductId })"> @item.Product.ProductName </a> </td>
                        <td>
                            <form action="@Url.Action("SuaSoLuong")" method="get">
                                @*<input type="hidden" name="SanPhamID" value="@item.Product.ProductId" />*@
                                <input id="quantity" readonly type="number" max=@item.Quantity class="txtQuantity" data-id="@item.Product.ProductId" @*name="soluongmoi"*@ value="@item.Quantity" />
                                <input type="hidden" id="maxquantity" value=@item.Product.Quantity />
                                <p id="err" class="text-danger"></p>
                                @*<button type="submit" class="btn btn-primary btn-sm"> Cập nhật </button>*@
                            </form>
                        </td>
                        <td> @item.Product.Price.ToString("#,##0").Replace(',', '.') VNĐ </td>
                        <td> @item.ThanhTien.ToString("#,##0").Replace(',', '.') VNĐ </td>

                        @*<td><a href="#" data-id="@item.Product.ProductId" onclick="return confirm('Bạn có chắc muốn xóa sản phẩm này?');" class="btn-delete btn btn-danger btn-sm">Xóa</a></td>*@
                    </tr>
                }
            <tr>
                @*<td>Mã khuyến mãi</td>*@
                <td><input class="form-control"  readonly type="text" name="promotioncode" value="@code"   id="promotioncode" placeholder="Mã khuyến mãi" /></td>
                <td><input type="hidden" name="codeid" id="code" value=@ViewBag.codeid />
                <h4>Giảm giá</h4>
                </td>
                <td><input type="hidden" id="amount" value=@ViewBag.amount />
                    <h4>@giam %</h4>
                <input type="hidden" id="point" value="@point" />
                </td>
                <td class="text-right">Tổng số lượng:</td>
                <td> @Model.Sum(m => m.Quantity) </td>
                <td class="text-right">Tổng thành tiền:</td>
                @*<td>@Model.Sum(m => m.ThanhTien).ToString("#,##0").Replace(',', '.') VNĐ </td>*@
                <td><input class="form-control" type="text" name="sum" value="@Model.Sum(m => m.ThanhTien).ToString("#,##0").Replace(',', '.')" id="sum" />VNĐ</td>                
            </tr>
            </table>
        </div>
        @if (User.Identity.IsAuthenticated)
        {
    <form class="form-group form-inline" action="@Url.Action("Payment", "Cart")" method="post">
        <input class="form-control" type="text" required value="@ViewBag.name" name="receiver" max="100" id="receiver" placeholder="tên người nhận" />
        <input class="form-control" type="text" required value="@ViewBag.phone" name="phonereceive" id="phonereceive" placeholder="số điện thoại nhận hàng" />
        <input class="form-control" type="text" required value="@ViewBag.add" name="addressreceive" id="addressreceive" placeholder="địa chỉ nhận hàng" />
        <input type="hidden" name="codeid" id="code" value=@ViewBag.codeid />
        <input type="hidden" name="point" value=@ViewBag.point />
        <label>Thanh toán tiền mặt</label>
        <input type="radio" name="paymentmethod" value="cash" checked />
        <label>Thanh toán paypal</label>
        <input type="radio" name="paymentmethod" value="momo" />
        <button id="btnContinue" class="btn">Quay lại</button>
        <button id="btnPaymentt" type="submit" class="btn">Đặt hàng</button>
    </form>
        }
        else
        {
            <form class="form-group form-inline" action="@Url.Action("Payment", "Cart")" method="post">
                <input class="form-control" type="text" required name="receiver" id="receiver" placeholder="tên người nhận" />
                <input class="form-control" type="text" required name="phonereceive" id="phonereceive" placeholder="số điện thoại nhận hàng" />
                <input class="form-control" type="text" required name="addressreceive" id="addressreceive" placeholder="địa chỉ nhận hàng" />
                <label>Thanh toán tiền mặt</label>
                <input type="radio" name="paymentmethod" value="cash" checked />                
                <button id="btnContinue" class="btn">Quay lại</button>
                <button id="btnPaymentt" type="submit" class="btn">Thanh toán</button>
            </form>
        }
    </div>
</div>

<script>
    var cart = {
        init: function () {
            cart.regEvents();
        },
        regEvents: function () {
            $('#btnContinue').off('click').on('click', function (e) {
                e.preventDefault();
                window.location.href = "/";
            });
            $('#btnPayment').off('click').on('click', function () {
                window.location.href = "/thanh-toan";
            });
            $('#btnUpdate').off('click').on('click', function (e) {
                e.preventDefault();
                var listProduct = $('.txtQuantity');
                var cartList = [];
                $.each(listProduct, function (i, item) {
                    cartList.push({
                        Quantity: $(item).val(),
                        Product: {
                            ProductId: $(item).data('id')
                        }
                    });
                });

                $.ajax({
                    url: '/Cart/Update',
                    data: { cartModel: JSON.stringify(cartList) },
                    dataType: 'json',
                    type: 'POST',
                    success: function (res) {
                        if (res.status == true) {
                            window.location.href = "gio-hang";
                        }
                    }
                })
            });

            $('#btnDeleteAll').off('click').on('click', function (e) {
                e.preventDefault();
                $.ajax({
                    url: '/Cart/DeleteAll',
                    dataType: 'json',
                    type: 'POST',
                    success: function (res) {
                        if (res.status == true) {
                            window.location.href = "/gio-hang";
                        }
                    }
                })
            });

            $('.btn-delete').off('click').on('click', function (e) {
                e.preventDefault();
                $.ajax({
                    data: { id: $(this).data('id') },
                    url: '/Cart/Delete',
                    dataType: 'json',
                    type: 'POST',
                    success: function (res) {
                        if (res.status == true) {
                            window.location.href = "/gio-hang";
                        }
                    }
                })
            });
        }
    }
    cart.init();
</script>
<script>
    $(document).ready(function () {
        $('#quantity').on('keyup', function () {
            var that = $(this);
            var max = $('#maxquantity').val();
            if (that.val() <= max && that.val() >= 1) {
                $('#err').empty();
                $('#btnUpdate').removeClass('hide');
            } else {
                $('#err').empty().html('số lượng không hợp lệ');
                $('#btnUpdate').addClass('hide');
            }
        })
        var code = $(this).val();
        var codecom = $('#code').val();
        var amount = $('#amount').val();
        var point = $('#point').val();
        var sum = $('#sum').val();        
        var a = parseInt(sum);        
        if (point != "") {
            a = a * 1000000 - parseInt(point);       
            var b = a.toString().replace(/^[+-]?\d+/, function (int) {
                return int.replace(/(\d)(?=(\d{3})+$)/g, '$1,');
            });
            $('#sum').val(b);      
        }
        if (codecom != "") {          
            a = (a - (a * amount)) * 1000000;      
            var b = a.toString().replace(/^[+-]?\d+/, function (int) {
                return int.replace(/(\d)(?=(\d{3})+$)/g, '$1,');
            });
            $('#sum').val(b);      
        }
    });
</script>
